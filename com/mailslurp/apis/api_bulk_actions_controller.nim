#
# MailSlurp API
# 
# MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository
# The version of the OpenAPI document: 6.5.2
# 
# Generated by: https://openapi-generator.tech
#

import httpclient
import json
import logging
import marshal
import options
import strformat
import strutils
import tables
import typetraits
import uri

import ../models/model_bulk_send_email_options
import ../models/model_inbox_dto

const basepath = "http://localhost:8080"

template constructResult[T](response: Response): untyped =
  if response.code in {Http200, Http201, Http202, Http204, Http206}:
    try:
      when name(stripGenericParams(T.typedesc).typedesc) == name(Table):
        (some(json.to(parseJson(response.body), T.typedesc)), response)
      else:
        (some(marshal.to[T](response.body)), response)
    except JsonParsingError:
      # The server returned a malformed response though the response code is 2XX
      # TODO: need better error handling
      error("JsonParsingError")
      (none(T.typedesc), response)
  else:
    (none(T.typedesc), response)


proc bulkCreateInboxes*(httpClient: HttpClient, count: int): (Option[seq[InboxDto]], Response) =
  ## Bulk create Inboxes (email addresses)
  let query_for_api_call = encodeQuery([
    ("count", $count), # Number of inboxes to be created in bulk
  ])

  let response = httpClient.post(basepath & "/bulk/inboxes" & "?" & query_for_api_call)
  constructResult[seq[InboxDto]](response)


proc bulkDeleteInboxes*(httpClient: HttpClient, UUID: seq[string]): Response =
  ## Bulk Delete Inboxes
  httpClient.headers["Content-Type"] = "application/json"
  httpClient.delete(basepath & "/bulk/inboxes", $(%UUID))


proc bulkSendEmails*(httpClient: HttpClient, BulkSendEmailOptions: BulkSendEmailOptions): Response =
  ## Bulk Send Emails
  httpClient.headers["Content-Type"] = "application/json"
  httpClient.post(basepath & "/bulk/send", $(%BulkSendEmailOptions))


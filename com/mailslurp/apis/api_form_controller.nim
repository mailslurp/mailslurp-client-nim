#
# MailSlurp API
# 
# MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository
# The version of the OpenAPI document: 6.5.2
# 
# Generated by: https://openapi-generator.tech
#

import httpclient
import json
import logging
import marshal
import options
import strformat
import strutils
import tables
import typetraits
import uri


const basepath = "https://api.mailslurp.com"

template constructResult[T](response: Response): untyped =
  if response.code in {Http200, Http201, Http202, Http204, Http206}:
    try:
      when name(stripGenericParams(T.typedesc).typedesc) == name(Table):
        (some(json.to(parseJson(response.body), T.typedesc)), response)
      else:
        (some(marshal.to[T](response.body)), response)
    except JsonParsingError:
      # The server returned a malformed response though the response code is 2XX
      # TODO: need better error handling
      error("JsonParsingError")
      (none(T.typedesc), response)
  else:
    (none(T.typedesc), response)


proc submitForm*(httpClient: HttpClient, _emailAddress: string, _redirectTo: string, _spamCheck: string, _subject: string, _successMessage: string, _to: string, otherParameters: string): (Option[string], Response) =
  ## Submit a form to be parsed and sent as an email to an address determined by the form fields
  httpClient.headers["Content-Type"] = "multipart/form-data"
  let query_for_api_call = newMultipartData({
    "_emailAddress": $_emailAddress, # Email address of the submitting user. Include this if you wish to record the submitters email address and reply to it later.
    "_redirectTo": $_redirectTo, # Optional URL to redirect form submitter to after submission. If not present user will see a success message.
    "_spamCheck": $_spamCheck, # Optional but recommended field that catches spammers out. Include as a hidden form field but LEAVE EMPTY. Spam-bots will usually fill every field. If the _spamCheck field is filled the form submission will be ignored.
    "_subject": $_subject, # Optional subject of the email that will be sent.
    "_successMessage": $_successMessage, # Optional success message to display if no _redirectTo present.
    "_to": $_to, # The email address that submitted form should be sent to.
    "otherParameters": $otherParameters, # All other parameters or fields will be accepted and attached to the sent email. This includes files and any HTML form field with a name. These fields will become the body of the email that is sent.
  })

  let response = httpClient.post(basepath & "/forms", multipart=query_for_api_call)
  constructResult[string](response)


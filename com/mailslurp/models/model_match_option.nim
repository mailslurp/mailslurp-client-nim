#
# MailSlurp API
# 
# MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository
# The version of the OpenAPI document: 6.5.2
# Contact: contact@mailslurp.dev
# Generated by: https://openapi-generator.tech
#

import json
import tables


type Field* {.pure.} = enum
  SUBJECT
  TO
  BCC
  CC
  FROM

type Should* {.pure.} = enum
  CONTAIN
  EQUAL

type MatchOption* = object
  ## Options for matching emails in an inbox. Each match option object contains a `field`, `should` and `value` property. Together they form logical conditions such as `SUBJECT` should `CONTAIN` value.
  field*: Field ## Fields of an email object that can be used to filter results
  should*: Should ## How the value of the email field specified should be compared to the value given in the match options.
  value*: string ## The value you wish to compare with the value of the field specified using the `should` value passed. For example `BODY` should `CONTAIN` a value passed.

func `%`*(v: Field): JsonNode =
  let str = case v:
    of Field.SUBJECT: "SUBJECT"
    of Field.TO: "TO"
    of Field.BCC: "BCC"
    of Field.CC: "CC"
    of Field.FROM: "FROM"

  JsonNode(kind: JString, str: str)

func `$`*(v: Field): string =
  result = case v:
    of Field.SUBJECT: "SUBJECT"
    of Field.TO: "TO"
    of Field.BCC: "BCC"
    of Field.CC: "CC"
    of Field.FROM: "FROM"

func `%`*(v: Should): JsonNode =
  let str = case v:
    of Should.CONTAIN: "CONTAIN"
    of Should.EQUAL: "EQUAL"

  JsonNode(kind: JString, str: str)

func `$`*(v: Should): string =
  result = case v:
    of Should.CONTAIN: "CONTAIN"
    of Should.EQUAL: "EQUAL"

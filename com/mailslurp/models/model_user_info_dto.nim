#
# MailSlurp API
# 
# MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
# The version of the OpenAPI document: 6.5.2
# Contact: contact@mailslurp.dev
# Generated by: https://openapi-generator.tech
#

import json
import tables


type AccountState* {.pure.} = enum
  FROZEN
  ACTIVE

type SubscriptionType* {.pure.} = enum
  PROMONTHLY
  STARTER
  TEAM
  ENTERPRISE

type AccountType* {.pure.} = enum
  SOLO
  CHILDSOLO
  CHILDTEAM

type UserInfoDto* = object
  ## 
  id*: string
  emailAddress*: string
  accountState*: AccountState
  subscriptionType*: SubscriptionType
  accountType*: AccountType
  createdAt*: string

func `%`*(v: AccountState): JsonNode =
  let str = case v:
    of AccountState.FROZEN: "FROZEN"
    of AccountState.ACTIVE: "ACTIVE"

  JsonNode(kind: JString, str: str)

func `$`*(v: AccountState): string =
  result = case v:
    of AccountState.FROZEN: "FROZEN"
    of AccountState.ACTIVE: "ACTIVE"

func `%`*(v: SubscriptionType): JsonNode =
  let str = case v:
    of SubscriptionType.PROMONTHLY: "PRO_MONTHLY"
    of SubscriptionType.STARTER: "STARTER"
    of SubscriptionType.TEAM: "TEAM"
    of SubscriptionType.ENTERPRISE: "ENTERPRISE"

  JsonNode(kind: JString, str: str)

func `$`*(v: SubscriptionType): string =
  result = case v:
    of SubscriptionType.PROMONTHLY: "PRO_MONTHLY"
    of SubscriptionType.STARTER: "STARTER"
    of SubscriptionType.TEAM: "TEAM"
    of SubscriptionType.ENTERPRISE: "ENTERPRISE"

func `%`*(v: AccountType): JsonNode =
  let str = case v:
    of AccountType.SOLO: "SOLO"
    of AccountType.CHILDSOLO: "CHILD_SOLO"
    of AccountType.CHILDTEAM: "CHILD_TEAM"

  JsonNode(kind: JString, str: str)

func `$`*(v: AccountType): string =
  result = case v:
    of AccountType.SOLO: "SOLO"
    of AccountType.CHILDSOLO: "CHILD_SOLO"
    of AccountType.CHILDTEAM: "CHILD_TEAM"

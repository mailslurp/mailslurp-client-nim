#
# MailSlurp API
# 
# MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.   ## Resources - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository 
# The version of the OpenAPI document: 6.5.2
# 
# Generated by: https://openapi-generator.tech
#

import json
import tables

import model_attachment_meta_data

type EventName* {.pure.} = enum
  EMAILRECEIVED

type WebhookPayload* = object
  ## MailSlurp webhook payload schema. This schema describes the JSON object that is sent via HTTP POST to webhook urls when an email is received by an inbox that a webhook is attached to. Payloads may be delivered multiple times so use the ID as a key for event uniqueness. The payload contains IDs for the email and inbox affected. Use these to fetch more data related to the event using appropriate inbox and email endpoints. See https://www.mailslurp.com/guides/email-webhooks/ for more information. Your webhook endpoint should accept POST HTTP request and return a 200 in under 30 seconds. Process the webhook asynchronously if you need to.
  attachmentMetaDatas*: seq[AttachmentMetaData] ## List of attachment meta data objects if attachments present
  bcc*: seq[string] ## List of `BCC` recipients email was addressed to
  cc*: seq[string] ## List of `CC` recipients email was addressed to
  createdAt*: string ## Date time of event creation
  emailId*: string ## ID of the email that was received. Use this ID for fetching the email
  eventName*: EventName ## Name of the event type webhook is being triggered for
  `from`*: string ## Who the email was sent from
  id*: string ## Idempotent message ID. Store this ID locally or in a database to prevent message duplication.
  inboxId*: string ## Id of the inbox that receive an email
  subject*: string ## The subject line of the email message
  to*: seq[string] ## List of `To` recipients email was addressed to
  webhookId*: string ## ID of webhook entity being triggered
  webhookName*: string ## Name of the webhook being triggered

func `%`*(v: EventName): JsonNode =
  let str = case v:
    of EventName.EMAILRECEIVED: "EMAIL_RECEIVED"

  JsonNode(kind: JString, str: str)

func `$`*(v: EventName): string =
  result = case v:
    of EventName.EMAILRECEIVED: "EMAIL_RECEIVED"
